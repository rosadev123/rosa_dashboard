nav_item(link_posit)
)
navset_card_tab(
nav_panel(title = "One", p("First tab content.")),
nav_panel(title = "Two", p("Second tab content.")),
nav_panel(title = "Three", p("Third tab content")),
nav_spacer(),
# nav_menu(
#   title = "Links",
#   nav_item(link_shiny),
#   nav_item(link_posit)
# )
)
navset_card_tab(
nav_panel(title = "One"
,plot(mtcars)),
nav_panel(title = "Two", p("Second tab content.")),
nav_panel(title = "Three", p("Third tab content")),
nav_spacer(),
# nav_menu(
#   title = "Links",
#   nav_item(link_shiny),
#   nav_item(link_posit)
# )
)
navset_card_tab(
nav_panel(title = "One"
,card_body(plot(mtcars))),
nav_panel(title = "Two", p("Second tab content.")),
nav_panel(title = "Three", p("Third tab content")),
nav_spacer(),
# nav_menu(
#   title = "Links",
#   nav_item(link_shiny),
#   nav_item(link_posit)
# )
)
navset_card_tab(
height = 450,
full_screen = TRUE,
title = "HTML Widgets",
nav_panel(
"Plotly",
card_title("A plotly plot"),
plot(mtcars)
),
nav_panel(
"Leaflet",
card_title("A leaflet plot"),
plot(mtcars)
),
nav_panel(
shiny::icon("circle-info"),
markdown("Learn more about [htmlwidgets](http://www.htmlwidgets.org/)")
)
plot(mtcars)
navset_card_tab(
height = 450,
full_screen = TRUE,
title = "HTML Widgets",
nav_panel(
"Plotly",
card_title("A plotly plot"),
plot(mtcars)
),
nav_panel(
"Leaflet",
card_title("A leaflet plot"),
viz_tble_dcntr_def
),
nav_panel(
shiny::icon("circle-info"),
markdown("Learn more about [htmlwidgets](http://www.htmlwidgets.org/)")
)
navset_card_tab(
# height = 450,
full_screen = TRUE
title = "HTML Widgets",
navset_card_tab(
# height = 450,
full_screen = TRUE,
title = "HTML Widgets",
nav_panel(
"Plotly",
card_title("A plotly plot"),
plot(mtcars)
),
nav_panel(
"Leaflet",
card_title("A leaflet plot"),
viz_tble_dcntr_def
),
nav_panel(
shiny::icon("circle-info"),
markdown("Learn more about [htmlwidgets](http://www.htmlwidgets.org/)")
)
navset_card_tab(
# height = 450,
full_screen = TRUE,
title = "HTML Widgets",
nav_panel(
"Plotly",
card_title("A plotly plot"),
plot(mtcars)
),
nav_panel(
"Leaflet",
card_title("A leaflet plot"),
viz_tble_dcntr_def
),
nav_panel(
shiny::icon("circle-info"),
markdown("Learn more about [htmlwidgets](http://www.htmlwidgets.org/)")
)
tar_make()
make_nav_bar = function(viz_tble_dcntr_def = viz_tble_dcntr_def){
navset_card_tab(
# height = 450,
full_screen = TRUE,
title = "HTML Widgets",
nav_panel(
"Plotly",
card_title("A plotly plot"),
plot(mtcars)
),
nav_panel(
"Leaflet",
viz_tble_dcntr_def
),
nav_panel(
shiny::icon("circle-info"),
markdown("Learn more about [htmlwidgets](http://www.htmlwidgets.org/)")
)
}
tar_make(viz_nav_object)
tar_load(viz_nav_object)
viz_nav_object
tar_make()
viz_nav_object()
viz_nav_object
tar_make()
expandable
tar_make()
here::here(
"data"
,"Re_ FishFORWRD Database Updates - June"
,"FishFORWRD Research Projects_CLEAN_6.28.24.xlsx")
tar_make(data_raw_current)
tar_make(data_raw_needed)
data = tar_read(data_raw_needed)
data %>%
janitor::clean_names() %>%
mutate(count = 1)
temp_data = data %>%
janitor::clean_names() %>%
mutate(count = 1) %>%
filter(!is.na(research_need_id_number)) %>%
#removal_step
#--step removes old research_cat attributes
#--also added step that deals with nulls and converts to NAs
# select(!starts_with("research_category")) %>% #removed this as name is correct now
# rename(
#   "research_category" = identified_research_need
#   ,"research_category_2" = identified_research_need2) %>% #removed this as name is correct now
mutate(across(where(is.character)
,~case_when(.x %in% c("Null", "NULL")~NA_character_, T~.x) %>%
replace_na("NULL")))
tar_make(starts_with("data_raw"))
tar_make(data_needed_pro)
tar_make()
data = tar_read(data_needed_pro)
tmp_data = data %>%
select(research_need_id, research_category, source_of_identification
,windfarm_development_stage, spatial_scale, summary_of_research_need
,data_gap_analysis_score_mg, existing_project_addressing_need_id_number_mg) %>%
# select(!c(existing_project_addressing_need_id_number, data_gap_analysis_score, count)) %>%
rename_with(~str_remove(.x, "_mg") %>% str_remove("_km")) %>%
mutate(research_need_id   = strg_numeric_order(research_need_id  , rev = F)) %>%
arrange(research_need_id)
tmp_data = data %>%
select(research_need_id, research_category, source_of_identification
# ,windfarm_development_stage #mg20240711 - removed attribute
,spatial_scale, summary_of_research_need
,data_gap_analysis_score_mg, existing_project_addressing_need_id_number_mg) %>%
# select(!c(existing_project_addressing_need_id_number, data_gap_analysis_score, count)) %>%
rename_with(~str_remove(.x, "_mg") %>% str_remove("_km")) %>%
mutate(research_need_id   = strg_numeric_order(research_need_id  , rev = F)) %>%
arrange(research_need_id)
tmp_data = data %>%
select(research_need_id, research_category, source_of_identification
# ,windfarm_development_stage #mg20240711 - removed attribute
,spatial_scale, summary_of_research_need
,data_gap_analysis_score, existing_project_addressing_need_id_number_mg) %>%
# select(!c(existing_project_addressing_need_id_number, data_gap_analysis_score, count)) %>%
rename_with(~str_remove(.x, "_mg") %>% str_remove("_km")) %>%
mutate(research_need_id   = strg_numeric_order(research_need_id  , rev = F)) %>%
arrange(research_need_id)
tmp_data = data %>%
select(research_need_id, research_category, source_of_identification
# ,windfarm_development_stage #mg20240711 - removed attribute
,spatial_scale, summary_of_research_need
,data_gap_analysis_score, existing_project_addressing_need_id_number) %>%
# select(!c(existing_project_addressing_need_id_number, data_gap_analysis_score, count)) %>%
rename_with(~str_remove(.x, "_mg") %>% str_remove("_km")) %>%
mutate(research_need_id   = strg_numeric_order(research_need_id  , rev = F)) %>%
arrange(research_need_id)
id = "project_needs"
temp_table = reactable(
tmp_data
,columns = combined_named_lists(
colDef_sticky(col = "research_need_id", side = "left")
,colDef_minwidth(cols = rtrn_cols(tmp_data, "addressing|status"), width = 200)
,colDef_minwidth(cols = rtrn_cols(tmp_data, "summary|explanation|notes"), width = 600)
,colDef_filter_select(cols = rtrn_cols(tmp_data
,words = "research_need_id")
,id = id, F)
,colDef_filter_select(cols = rtrn_cols(tmp_data
,words = "summary|status|addressing|explanation|notes|research_need_id"
,exclude = T)
,id = id)
),defaultColDef = rctbl_dflt_coldef()
,wrap = T
,elementId = id
) %>%
rctble_format_table() %>%
rctble_add_download(., id = id)
temp_table
tar_make()
tar_visnetwork()
tar_make()
tar_make(data_raw_current)
tar_make()
tar_make(data_file_current)
tar_make(data_raw_current)
tar_make(data_raw_needed)
tar_make()
tar_visnetwork()
tar_load_everything()
data_raw_current
data = tar_read(data_raw_current)
temp_data = data %>%
janitor::clean_names() %>%
mutate(count = 1) %>%
mutate(project_start_year = as.numeric(project_start_year)
,project_end_year = as.numeric(estimated_project_end_year)) %>%
filter(!is.na(research_project_id)) %>%
#removal_step
#--step removes old research_cat attributes
#--also added step that deals with nulls and converts to NAs
#NOTE!!! mg20240710 - this is not an issue anymore  since they have been changed
# select(!starts_with("research_category")) %>%
# rename(
#   "research_category" = identified_research_need
#   ,"research_category_2" = identified_research_need2) %>%
mutate(across(where(is.character)
,~case_when(.x %in% c("Null", "NULL")~NA_character_, T~.x) %>%
replace_na("NULL"))) |>
#NOTE: HOT FIX ----- NEEDS TO BE REMOVED AND CORRECTED FOR LATER
select(!c(research_category)) |>
# mutate(animal_group = receptor) |> #removing this
mutate(research_category = research_category2)
temp_data = data %>%
janitor::clean_names() %>%
mutate(count = 1) %>%
mutate(project_start_year = as.numeric(project_start_year)
,project_end_year = as.numeric(estimated_project_end_year)) %>%
filter(!is.na(research_project_id)) %>%
#removal_step
#--step removes old research_cat attributes
#--also added step that deals with nulls and converts to NAs
#NOTE!!! mg20240710 - this is not an issue anymore  since they have been changed
# select(!starts_with("research_category")) %>%
# rename(
#   "research_category" = identified_research_need
#   ,"research_category_2" = identified_research_need2) %>%
mutate(across(where(is.character)
,~case_when(.x %in% c("Null", "NULL")~NA_character_, T~.x) %>%
replace_na("NULL")))
tar_make()
tar_visnetwork()
tar_load(data_current_pro)
data = tar_read(data_current_pro)
tmp_data = data %>%
dplyr::select(research_need_id
,project_title
,research_category
,location
,funder
,partner_entities
# ,pi_name
# ,pi_contact_info
,project_website
) %>%
rename_with(~str_remove(.x, "_mg")) %>%
mutate(research_need_id = strg_numeric_order(research_need_id, rev = F)) %>%
arrange(research_need_id)
data = tar_read(data_current_pro)
test_1 = data %>%
count_percent_zscore(
grp_c = c("location", "research_category")
,grp_p = c("location")
,col = count, rnd = 4
) %>%
rename(parent = location, label = research_category)
test_2 =  data %>%
count_percent_zscore(
grp_c = c("location")
,grp_p = c()
,col = count, rnd = 4
) %>%
rename(label = location)
data = bind_rows(
test_1
,test_2
) %>%
mutate(
parent = replace_na(parent, "")
) %>%
mutate(label_adj = str_glue("{label}_{parent}") %>%
as.character()) %>%
mutate(id_1 = case_when(label %in% test_2$label~label, T~label_adj))
temp_plot =
plot_ly(data = data,
type= "treemap"
,values = ~count
,labels = ~label
,ids = ~id_1
,parents=  ~parent
,branchvalues = "total"
)
temp_plot
tar_make()
tar_read(data_current_pro)
data %>%
select(!c(project_budget, count)) %>%
rename_with(~str_remove(.x, "_mg") %>%
str_remove("_km")) %>%
mutate(research_project_id  = strg_numeric_order(research_project_id , rev = F)) %>%
arrange(research_project_id )
data %>%
select(!c(count)) %>%
rename_with(~str_remove(.x, "_mg") %>%
str_remove("_km")) %>%
mutate(research_project_id  = strg_numeric_order(research_project_id , rev = F)) %>%
arrange(research_project_id ) %>%
select(research_project_id, project_title, research_category
,methodology, receptor, location, fixed_or_floating
,windfarm_development_stage, spatial_scale, funder
,partner_entities, pi_name, project_website
,project_start_year
,project_end_year)
data %>%
select(!c(count)) %>%
rename_with(~str_remove(.x, "_mg") %>%
str_remove("_km")) %>%
mutate(research_project_id  = strg_numeric_order(research_project_id , rev = F))
data = tar_read(data_current_pro)
data %>%
select(!c(count)) %>%
rename_with(~str_remove(.x, "_mg") %>%
str_remove("_km")) %>%
mutate(research_project_id  = strg_numeric_order(research_project_id , rev = F))
tmp_data  = data %>%
select(!c(count)) %>%
rename_with(~str_remove(.x, "_mg") %>%
str_remove("_km")) %>%
mutate(research_project_id  = strg_numeric_order(research_project_id , rev = F)) %>%
arrange(research_project_id ) %>%
select(research_project_id, project_title, research_category
,methodology, receptor, location, fixed_or_floating
,windfarm_development_stage, spatial_scale, funder
,partner_entities, pi_name, project_website
,project_start_year
,project_end_year)
id = "current_projects"
temp_table = reactable(
tmp_data
,columns = combined_named_lists(
colDef_sticky(col = "research_project_id", side = "left")
,colDef_urlLink(cols = rtrn_cols(tmp_data, "_website"), link_text = "Link to site")
# ,colDef_mailto(
#   cols = rtrn_cols(tmp_data, "pi_name")
#   ,col_email = rtrn_cols(tmp_data, "pi_contact_info")
#   ,data = tmp_data)
,colDef_colWidth_robust(
cols = rtrn_cols(tmp_data, "project_objectives|notes|methodology"), minWidth = 600)
,colDef_colWidth_robust(
cols = rtrn_cols(tmp_data, "research_category"), minWidth = 100)
,colDef_colWidth_robust(
cols = rtrn_cols(tmp_data
,"title|partner_ent|funding|temporal|windfarm|identified|gis"), minWidth = 250)
,colDef_filter_select(cols = rtrn_cols(tmp_data, words = "objectives|method|notes", exclude = T)
,id = id)
)
,defaultColDef = colDef(footerStyle = list(fontWeight = "bold")
,minWidth = 150
,header = mk_special_header)
,wrap = T, elementId = id
) %>%
rctble_format_table() %>%
rctble_add_download(., id = id)
temp_table
tar_make()
data = tar_read(data_current_pro)
data %>% colnames() |>  sort()
tmp_data  = data %>% view()
data %>% view()
tmp_data  = data %>%
select(!c(count)) %>%
rename_with(~str_remove(.x, "_mg") %>%
str_remove("_km")) %>%
mutate(research_project_id  = strg_numeric_order(research_project_id , rev = F)) %>%
arrange(research_project_id ) %>%
select(research_project_id, project_title, research_category, developer_fisheries_monitoring_plan
,methodology, receptor, location, fixed_or_floating
,windfarm_development_stage, , spatial_scale, funder
,partner_entities, pi_name, project_website
,project_start_year
,project_end_year)
id = "current_projects"
temp_table = reactable(
tmp_data
,columns = combined_named_lists(
colDef_sticky(col = "research_project_id", side = "left")
,colDef_urlLink(cols = rtrn_cols(tmp_data, "_website"), link_text = "Link to site")
# ,colDef_mailto(
#   cols = rtrn_cols(tmp_data, "pi_name")
#   ,col_email = rtrn_cols(tmp_data, "pi_contact_info")
#   ,data = tmp_data)
,colDef_colWidth_robust(
cols = rtrn_cols(tmp_data, "project_objectives|notes|methodology"), minWidth = 600)
,colDef_colWidth_robust(
cols = rtrn_cols(tmp_data, "research_category"), minWidth = 100)
,colDef_colWidth_robust(
cols = rtrn_cols(tmp_data
,"title|partner_ent|funding|temporal|windfarm|identified|gis"), minWidth = 250)
,colDef_filter_select(cols = rtrn_cols(tmp_data, words = "objectives|method|notes", exclude = T)
,id = id)
)
,defaultColDef = colDef(footerStyle = list(fontWeight = "bold")
,minWidth = 150
,header = mk_special_header)
,wrap = T, elementId = id
) %>%
rctble_format_table() %>%
rctble_add_download(., id = id)
temp_table
tmp_data = data %>%
dplyr::select(research_project_id
,project_title
,research_category
,location
,funder
,lead_entity
# ,pi_name
# ,pi_contact_info
,project_website
) %>%
rename_with(~str_remove(.x, "_mg")) %>%
mutate(research_project_id = strg_numeric_order(research_project_id, rev = F)) %>%
arrange(research_project_id)
id = "id_tble_crrnt_proj_shrt"
temp_table = reactable(
tmp_data
,defaultColDef = colDef(footerStyle = list(fontWeight = "bold"), header = mk_special_header)
,columns = combined_named_lists(
colDef_html(cols = colnames(tmp_data))
,colDef_sticky(cols = "research_project_id")
,colDef_colWidth_robust(cols = rtrn_cols(tmp_data, "itle"), minWidth = 250)
# ,colDef_minwidth(cols = rtrn_cols(tmp_data, "Research Need"), width = 110)
# ,colDef_mailto(cols = "pi_name", col_email = "pi_contact_info", tmp_data)
,colDef_urlLink_spec(cols = "research_project_id", col_url = "project_website", tmp_data)
,colDef_filter_select(cols = rtrn_cols(tmp_data, words = "title", exclude = T), id = id)
), wrap = T, elementId = id
) %>%
rctble_format_table()
temp_table
library(httr)
# Define the base URL
base_url <- "https://wsdot.com/ferries/vesselwatch/Vessels.ashx"
# Define query parameters (if needed)
query_params <- list(dojo.preventCache = 1720732524257)
query_params
# Define query parameters (if needed)
query_params <- list(dojo.preventCache = as.integer(1720732524257))
as.integer(1720732524257)
# Define query parameters (if needed)
query_params <- list(dojo.preventCache = as.integer(1720732524257))
# Define query parameters (if needed)
query_params <- list(dojo.preventCache = as.character(1720732524257))
query_params
# Make the GET request
response <- GET(url = base_url, query = query_params)
response
base_url <- "https://wsdot.com/ferries/vesselwatch/Terminals.ashx"
# Define query parameters (if needed)
query_params <- list(dojo.preventCache = as.character(1720732524257))
# Make the GET request
response <- GET(url = base_url, query = query_params)
response
# Make the GET request
response <- GET(url = base_url, query = query_params)
response$content
response$content |>
rawToChar()
response$content |>
rawToChar() |>
jsonlite::fromJSON()
response$content |>
# rawToChar() |>
jsonlite::fromJSON()
savehistory("~/project_work/080_projects/thea_dashboard/history_r.Rhistory")
